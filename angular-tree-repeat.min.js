/* angular-tree-repeat - v0.0.1 - 2014-03-07 */ !function(){"use strict";angular.module("sf.treeRepeat",[])}(),function(){"use strict";function a(a){var b=a.match(/^\s*([\$\w]+)\s+in\s+([\S\s]*)\s+of\s+([\S\s]*)$/);if(!b)throw new Error("Expected sfTreepeat in form of '_item_ in _collection_ of _root_' but got '"+a+"'.");return{value:b[1],collection:b[2],root:b[3]}}var b=angular.module("sf.treeRepeat");b.directive("sfTreepeat",["$log",function(b){return{restrict:"A",scope:!0,controller:["$scope","$attrs",function(c,d){var e=this.ident=a(d.sfTreepeat);b.info("Parsed '%s' as %s",d.sfTreepeat,JSON.stringify(this.ident)),c.$watch(this.ident.root,function(a){c[e.value]=a})}],compile:function(a){var b=a.html();return{pre:function(a,c,d,e){e.template=b}}}}}]),b.directive("sfTreecurse",["$compile",function(a){return{require:"^sfTreepeat",link:function(b,c,d,e){var f=["<",c.context.tagName,' ng-repeat="',e.ident.value," in ",e.ident.value,".",e.ident.collection,'">',e.template,"</",c.context.tagName,">"],g=angular.element(f.join(""));c.replaceWith(g),a(g)(b)}}}])}();